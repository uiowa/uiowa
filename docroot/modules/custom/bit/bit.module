<?php

/**
 * @file
 * Provides a bit entity type.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function bit_theme() {
  return [
    'bit' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function bit_theme_suggestions_bit(array $variables) {
  $suggestions = [];
  $bit = $variables['elements']['#bit'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'bit__' . $sanitized_view_mode;
  $suggestions[] = 'bit__' . $bit->bundle();
  $suggestions[] = 'bit__' . $bit->bundle() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Prepares variables for bit templates.
 *
 * Default template: bit.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the bit information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_bit(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}
