<?php

/**
 * @file
 * Primary module hooks for Sitenow Intranet module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Core\Link;
use Drupal\Core\Url;

/**
 * Implements hook_preprocess_page().
 */
function sitenow_intranet_preprocess_block(&$variables) {
  $status_code = \Drupal::request()
    ?->attributes
    ?->get('exception')
    ?->getStatusCode();

  if (sitenow_intranet_check_status_code($status_code)) {
    switch ($variables['plugin_id']) {
      case 'page_title_block':
        $variables['attributes']['class'][] = 'block-padding__top';
        break;

      case 'system_breadcrumb_block':
        unset($variables['content']);
        break;

      case 'system_main_block':
        $config = \Drupal::config('sitenow_intranet.settings');
        switch ($status_code) {
          case 401:
            $variables['content'] = [
              '#markup' => check_markup($config->get('unauthorized.message'), 'minimal'),
              '#prefix' => '<div class="text-align-center">',
              '#suffix' => '</div>',
            ];
            break;

          case 403:
            $variables['content'] = [
              '#markup' => check_markup($config->get('access_denied.message'), 'minimal'),
              '#prefix' => '<div class="text-align-center">',
              '#suffix' => '</div>',
            ];

            // If the user is logged in, show a logout link.
            if (\Drupal::currentUser()->isAuthenticated()) {
              $url = Url::fromRoute('user.logout');
              $link = Link::fromTextAndUrl(t('Logout'), $url);
              $variables['content']['logout_link'] = [
                '#markup' => $link->toString(),
                '#prefix' => '<p class="text-align-center">',
                '#suffix' => '</p>',
              ];
            }
            break;

        }
        break;

    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function sitenow_intranet_preprocess_page(&$variables) {
  $status_code = \Drupal::request()
    ?->attributes
    ?->get('exception')
    ?->getStatusCode();

  if (sitenow_intranet_check_status_code($status_code)) {
    $variables['action_menu']['#access'] = FALSE;
    $variables['primary_menu']['#access'] = FALSE;
    // @todo Do we need to set cache max-age to 0 here?
  }
}

/**
 * Implements hook_preprocess_page_title().
 */
function sitenow_intranet_preprocess_page_title(&$variables) {
  $status_code = \Drupal::request()
    ?->attributes
    ?->get('exception')
    ?->getStatusCode();

  $status_code_map = sitenow_intranet_map_status_codes();

  if (sitenow_intranet_check_status_code($status_code)) {
    $config = \Drupal::config('sitenow_intranet.settings');
    $variables['title'] = $config->get("{$status_code_map[$status_code]}.title");
    $variables['title_attributes']['class'][] = 'text-align-center';
  }
}

/**
 * Return an array of status codes mapped to config labels.
 *
 * @return string[]
 *  The array of codes mapped to their config labels.
 */
function sitenow_intranet_map_status_codes(): array {
  return [
    401 => 'unauthorized',
    403 => 'access_denied',
  ];
}

/**
 * Check a status code to set if it isn't null and is in our map.
 *
 * @param int|null $code
 *  The code to check.
 *
 * @return bool
 *  Whether the status code is relevant for further processing.
 */
function sitenow_intranet_check_status_code(int $code = NULL): bool {
  return !is_null($code) && in_array($code, array_keys(sitenow_intranet_map_status_codes()));
}
