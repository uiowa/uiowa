<?php

/**
 * @file
 * Contains sitenow_accordion.module.
 */

/**
 * Implements hook_preprocess_field().
 */
function sitenow_accordion_preprocess_field(&$variables) {

  switch ($variables["element"]["#field_name"]) {
    case 'field_accordion_item':
      // Add parent_id.
      $variables['parent_id'] = $variables["element"]["#object"]->id();
      // Prepare items array.
      $items = [];
      $variables['aria_owns'] = [];
      foreach ($variables['items'] as $delta => $item) {
        $items[] = $item['content'];
        $paragraph = $variables['element'][$delta]['#paragraph'];
        if ($paragraph->hasField('field_uip_id') && !$paragraph->get('field_uip_id')->isEmpty()) {
          // Use the unique ID if it exists.
          $unique_id = $paragraph->get('field_uip_id')->value;
          $variables['aria_owns'][] = $unique_id;
        }
        else {
          // Fall back to the nid-based ID.
          $variables['aria_owns'][] = 'accordion-item-' . $paragraph->id();
        }
      }
      $variables['items'] = $items;

      break;
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function sitenow_accordion_preprocess_paragraph__accordion_item(&$variables) {
  /** @var Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];

  /** @var Drupal\Core\Routing\AdminContext $admin_context */
  $admin_context = \Drupal::service('router.admin_context');

  if (!$admin_context->isAdminRoute()) {
    $variables['id'] = $paragraph->id();
    $variables['accordion_item_id'] = $paragraph->get('field_uip_id')->value;
  }
}
