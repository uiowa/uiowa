<?php

/**
 * @file
 * Primary module hooks for uiowa_maui module.
 */

/**
 * Implements hook_theme().
 */
function uiowa_maui_theme($existing, $type, $theme, $path) {
  return [
    'uiowa_maui_session_dates' => [
      'variables' => [
        'heading_size' => NULL,
        'data' => NULL,
      ],
    ],
  ];
}

/**
 * Allowed values callback function for field_uiowa_maui_date_category field.
 *
 * @return array
 */
function uiowa_maui_date_categories() {
  /** @var Drupal\uiowa_maui\MauiApi $maui */
  $maui = \Drupal::service('uiowa_maui.api');
  return $maui->getDateCategories();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function uiowa_maui_preprocess_block(&$variables) {
  switch ($variables['derivative_plugin_id']) {
    case 'uiowa_maui_academic_dates':
      /** @var \Drupal\block_content\Entity\BlockContent $block */
      $block = $variables['elements']['content']['#block_content'];

      if ($block->hasField('field_uiowa_headline')) {
        $headline_fields = $block->get('field_uiowa_headline')->getValue();
        foreach ($headline_fields as $headline_field) {
          // There isn't a headline, so set the children to this heading size.
          if (empty($headline_field['headline'])) {
            $heading_size = $headline_field['child_heading_size'];
          }
          else {
            $options = [
              'h2' => 'h3',
              'h3' => 'h4',
              'h4' => 'h5',
              'h5' => 'h6',
              'h6' => 'h6',
            ];
            $heading_size = $options[$headline_field['heading_size']];
          }
        }
      }

      $variables['content']['form'] = \Drupal::formBuilder()->getForm('\Drupal\uiowa_maui\Form\DatesBySessionForm', $heading_size);
      break;
  }
}

/**
 * Theme preprocess function for uiowa_maui_session_dates.
 */
function template_preprocess_uiowa_maui_session_dates(&$variables) {
  $dates = [];

  foreach ($variables['data'] as $date) {
    $start = strtotime($date->beginDate);
    $end = strtotime($date->endDate);
    $key = $start . $end;

    // The subsession takes priority if set.
    $item = (object) [
      'description' => $date->dateLookup->description,
      'session' => $date->subSession ?? $date->session->shortDescription,
    ];

    // Group items by date.
    if (isset($dates[$key])) {
      $dates[$key]['items'][] = $item;
    }
    else {
      $dates[$key] = [
        'start' => date('F j, Y', $start),
        'end' => date('F j, Y', $end),
        'items' => [$item],
      ];
    }
  }

  $variables['dates'] = $dates;

  // Remove raw data availability in template.
  unset($variables['data']);
}
