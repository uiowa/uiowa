<?php

/**
 * @file
 * Primary module hooks for Admissions Core module.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;
use Drupal\views\ViewExecutable;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Form\FormState;

/**
 * Implements hook_entity_presave().
 */
function admissions_core_entity_presave(EntityInterface $entity) {
  switch ($entity->bundle()) {
    case 'student_profile':
      // Setting the student profile title with the first/last name values.
      $output = $entity->get('field_person_first_name')->value . " " . $entity->get('field_person_last_name')->value;
      $entity->setTitle($output);
      break;
  }
}

/**
 * Implements hook_form_alter().
 */
function admissions_core_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'node_student_profile_form':
    case 'node_student_profile_edit_form':
      // Set form defaults if they exist.
      _sitenow_node_form_defaults($form, $form_state);

      if (isset($form['field_student_profile_image'])) {
        // Create node_student_profile_image group in the advanced container.
        $form['node_student_profile_image'] = [
          '#type' => 'details',
          '#title' => $form["field_student_profile_image"]["widget"]["#title"],
          '#group' => 'advanced',
          '#attributes' => [
            'class' => ['node-form-image'],
          ],
          '#attached' => [
            'library' => ['node/drupal.node'],
          ],
          '#weight' => -10,
          '#optional' => TRUE,
          '#open' => FALSE,
        ];
        // Set field_student_profile_image to node_student_profile_image group.
        $form['field_student_profile_image']['#group'] = 'node_student_profile_image';
      }
      break;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function admissions_core_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form['#id'] == 'views-exposed-form-counselors-block-counselors') {
    $form["territory"]["#options"]["All"] = t("- All -");
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 *
 * @param \Drupal\node\Entity\Node $node
 *   Get straight to the node instead of through entity.
 */
function admissions_core_node_delete(Node $node) {
  // Used on Admissions counselors map.
  if ($node->getType() == 'person') {
    $tags = ['node_type:' . $node->getType()];
    Cache::invalidateTags($tags);
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 *
 * @param \Drupal\node\Entity\Node $node
 *   Get straight to the node instead of through entity.
 */
function admissions_core_node_presave(Node $node) {
  // Used on Admissions counselors map.
  if ($node->getType() == 'person') {
    $tags = ['node_type:' . $node->getType()];
    Cache::invalidateTags($tags);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function admissions_core_preprocess_layout(&$variables) {
  /** @var \Drupal\Core\Layout\LayoutDefinition $layout */
  $layout = $variables['layout'];

  // Process the header layout.
  if ($layout->id() === 'layout_header') {
    $node = \Drupal::routeMatch()->getParameter('node');
    $node = (isset($node) ? $node : \Drupal::routeMatch()->getParameter('node_preview'));
    // Limit to just Student profiles.
    if ($node instanceof NodeInterface && $node->getType() === 'student_profile') {
      if ($node->hasField('field_image') && !$node->get('field_image')->isEmpty()) {
        // Set the featured image display.
        $variables['featured_image_display'] = 'large';
      }
    }
  }
}

/**
 * Implements hook_theme for Scholarship teaser.
 */
function admissions_core_theme($existing, $type, $theme, $path) {
  return [
    'node__scholarship__teaser' => [
      'template' => 'node--scholarship--teaser',
      'base hook' => 'node',
    ],
    'views_view_unformatted__scholarships__block_scholarships' => [
      'template' => 'views-view-unformatted--scholarships--block-scholarships',
      'base hook' => 'view',
    ],
    'views_view_unformatted__counselors' => [
      'template' => 'views-view-unformatted--counselors',
      'base hook' => 'view',
    ],
    'views_view_unformatted__student_profiles' => [
      'template' => 'views-view-unformatted--student-profiles',
      'base hook' => 'view',
    ],
    'node__view__counselors' => [
      'template' => 'node--view--counselors',
      'base hook' => 'node',
    ],
    'node__view__student_profiles' => [
      'template' => 'node--view--student-profiles',
      'base hook' => 'node',
    ],
    'field__comma_separated' => [
      'template' => 'field--comma-separated',
      'base hook' => 'field',
    ],
    'field__field_student_profile_blurb' => [
      'template' => 'field--field-student-profile-blurb',
      'base hook' => 'field',
    ],
    'field__node__field_person_hometown__student_profile' => [
      'template' => 'field--node--field-person-hometown--student-profile',
      'base hook' => 'field',
    ],
    'field__node__field_student_profile_major__student_profile' => [
      'template' => 'field--node--field-student-profile-major--student-profile',
      'base hook' => 'field',
    ],
    'field__node__title__student_profile__default' => [
      'template' => 'field--node--title--student-profile--default',
      'base hook' => 'field',
    ],
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function admissions_core_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  switch ($variables["element"]["#field_name"]) {
    case 'field_person_territory':
      $suggestions[] = 'field__comma_separated';
      break;
  }
}

/**
 * Implements hook_views_pre_render().
 */
function admissions_core_views_pre_render(ViewExecutable $view) {
  if ($view->id() == "counselors") {
    switch ($view->current_display) {
      case 'block_counselors':
      case 'page_counselors':
        $view->element['#attached']['library'][] = 'admissions_core/counselors-list';
        $view->element['#attached']['library'][] = 'admissions_core/person';
        break;

    }
  }
}

/**
 * Added allowed values function for student profiles territory field
 */
function admissions_core_state_options(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
  $options = [
    'AL' => 'Alabama',
    'AK' => 'Alaska',
    'AZ' => 'Arizona',
    'AR' => 'Arkansas',
    'CA' => 'California',
    'CO' => 'Colorado',
    'CT' => 'Connecticut',
    'DE' => 'Delaware',
    'FL' => 'Florida',
    'GA' => 'Georgia',
    'HI' => 'Hawaii',
    'ID' => 'Idaho',
    'IL' => 'Illinois',
    'IN' => 'Indiana',
    'IA' => 'Iowa',
    'KS' => 'Kansas',
    'KY' => 'Kentucky',
    'LA' => 'Louisiana',
    'ME' => 'Maine',
    'MD' => 'Maryland',
    'MA' => 'Massachusetts',
    'MI' => 'Michigan',
    'MN' => 'Minnesota',
    'MS' => 'Mississippi',
    'MO' => 'Missouri',
    'MT' => 'Montana',
    'NE' => 'Nebraska',
    'NV' => 'Nevada',
    'NH' => 'New Hampshire',
    'NJ' => 'New Jersey',
    'NM' => 'New Mexico',
    'NY' => 'New York',
    'NC' => 'North Carolina',
    'ND' => 'North Dakota',
    'OH' => 'Ohio',
    'OK' => 'Oklahoma',
    'OR' => 'Oregon',
    'PA' => 'Pennsylvania',
    'RI' => 'Rhode Island',
    'SC' => 'South Carolina',
    'SD' => 'South Dakota',
    'TN' => 'Tennessee',
    'TX' => 'Texas',
    'UT' => 'Utah',
    'VT' => 'Vermont',
    'VA' => 'Virginia',
    'WA' => 'Washington',
    'WV' => 'West Virginia',
    'WI' => 'Wisconsin',
    'WY' => 'Wyoming',
    'DC' => 'District of Columbia',
  ];
  return $options;
}
