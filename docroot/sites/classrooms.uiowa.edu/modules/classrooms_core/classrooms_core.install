<?php

/**
 * @file
 * Install, update and uninstall functions for the Classrooms Core module.
 */

use Drupal\node\Entity\Node;

/**
 * Implements hook_install().
 */
function classrooms_core_install() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Implements hook_uninstall().
 */
function classrooms_core_uninstall() {
  \Drupal::messenger()->addStatus(__FUNCTION__);
}

/**
 * Trigger a presave to populate new field on all existing rooms.
 */
function classrooms_core_update_9001(&$sandbox) {

  // Process all room nodes to populate the field value.
  if (!isset($sandbox['total'])) {
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'room')
      ->execute();

    $sandbox['total'] = count($query);
    $sandbox['current'] = 0;
    $sandbox['query'] = $query;

    if (empty($sandbox['total'])) {
      $sandbox['#finished'] = 1;
      return;
    }
  }
  // Loop through the nodes in batches.
  $nodes_per_batch = 25;
  $batch = array_slice($sandbox['query'], $sandbox['current'], $sandbox['current'] + $nodes_per_batch);
  if (empty($batch)) {
    $sandbox['#finished'] = 1;
    return;
  }

  foreach ($batch as $nid) {
    $node = Node::load($nid);
    $node->setRevisionLogMessage('Automated save.');
    $node->setRevisionUserId(1);
    $node->save();
    $sandbox['current']++;
  }

  \Drupal::messenger()
    ->addMessage($sandbox['current'] . ' nodes processed.');

  if ($sandbox['current'] >= $sandbox['total']) {
    $sandbox['#finished'] = 1;
  }
  else {
    $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);
  }

}
