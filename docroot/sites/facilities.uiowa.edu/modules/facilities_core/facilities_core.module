<?php

/**
 * @file
 * Custom functionality the Facilities website.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_form_alter().
 */
function facilities_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    case 'node_named_building_form':
    case 'node_named_building_edit_form':
      _sitenow_node_form_defaults($form, $form_state);
      break;

  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function facilities_core_preprocess_field(&$variables) {
  switch ($variables['element']['#field_name']) {
    case 'field_building_honoree_name':
      // Change label for output.
      $variables['element']['#title'] = 'Honoree';
      $variables['label'] = 'Honoree';
      $node = $variables['element']['#object'];
      // Append the last name if it exists.
      if (!$node->get('field_building_honoree_last_name')->isEmpty()) {
        $last = $node->get('field_building_honoree_last_name')->value;
        // Loop through and overwrite the value.
        foreach ($variables['items'] as $key => $item) {
          $variables['items'][$key]['content']['#context']['value'] .= ' ' . $last;
        }
      }
      break;

    case 'field_building_year_built':
    case 'field_building_address':
    case 'field_building_additional_info':
      // Assumes these are being called in
      // views_block:named_buildings-block_building using Views field api.
      if ($variables['element']['#view_mode'] === '_custom') {
        $variables['label_display'] = 'inline';
      }
      break;
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function facilities_core_preprocess_layout(&$variables) {
  /** @var \Drupal\Core\Layout\LayoutDefinition $layout */
  $layout = $variables['layout'];

  // Process the header layout.
  if ($layout->id() === 'layout_header') {
    $node = \Drupal::routeMatch()->getParameter('node');
    $node = ($node ?? \Drupal::routeMatch()->getParameter('node_preview'));
    if ($node instanceof NodeInterface) {
      if (in_array($node->getType(), [
        'named_building',
      ])) {
        if (!isset($variables['banner_attributes'])) {
          $variables['banner_settings'] = [];
        }
      }
      switch ($node->getType()) {
        case 'named_building':
          if ($node->hasField('field_image') && !$node->get('field_image')->isEmpty()) {

            // Set the featured image display.
            $variables['featured_image_display'] = 'medium';
          }
          break;

      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function facilities_core_preprocess_block(&$variables) {
  switch ($variables['plugin_id']) {
    case 'views_block:named_building_details-block_honoree':
      if (!isset($variables['attributes']['class'])) {
        $variables['attributes']['class'] = [''];
      }
      $variables['attributes']['class'][] .= 'bg--gray block-padding__all block-margin__default--removed';
      break;

    case 'views_block:named_building_details-block_building':
      if (!isset($variables['attributes']['class'])) {
        $variables['attributes']['class'] = [''];
      }
      $variables['attributes']['class'][] .= 'bg--white block-padding__all border';
      break;

  }
}
