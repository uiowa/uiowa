<?php

/**
 * @file
 * Contains grad_admissions_core.module.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function grad_admissions_core_theme($existing, $type, $theme, $path) {
  return [
    'field__taxonomy_term__field_college_website__colleges__default' => [
      'template' => 'field--taxonomy-term--field-college-website--colleges--default',
      'base hook' => 'field',
    ],
    'field__node__field_area_of_study_college__area_of_study__default' => [
      'template' => 'field--node--field-area-of-study-college--area-of-study--default',
      'base hook' => 'field',
    ],
    'field__node__title__grad_costs_estimate___custom' => [
      'template' => 'field--node--title--grad-costs-estimate---custom',
      'base hook' => 'field',
    ],
    'field__node__field_grad_costs_year__grad_costs_estimate' => [
      'template' => 'field--node--field-grad-costs-year--grad-costs-estimate',
      'base hook' => 'field',
    ],
    'field__node__field_grad_costs_intl_year__grad_costs_estimate' => [
      'template' => 'field--node--field-grad-costs-intl-year--grad-costs-estimate',
      'base hook' => 'field',
    ],
    'taxonomy_term__teaser' => [
      'template' => 'taxonomy-term--teaser',
      'base hook' => 'node',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grad_admissions_core_preprocess_field(&$variables) {
  switch ($variables["element"]["#field_name"]) {
    case 'field_area_of_study_grad_intro':
      $variables["label"] = t('Estimated Cost of Attendance');
      break;

    case 'field_area_of_study_college':
      $variables["label"] = t('Related Links');
      $node = $variables["element"]["#object"];
      // Add field_area_of_study_link to the end of field_area_of_study_college.
      if ($node->hasField('field_area_of_study_link') && !$node->get('field_area_of_study_link')->isEmpty()) {
        $existing_links = [];
        foreach (Element::children($variables['items']) as $delta) {
          $existing_links[$delta] = $variables['items'][$delta];
          unset($variables['items'][$delta]);
        }
        $colleges = $node->field_area_of_study_link->view();
        $college_count = count(Element::children($colleges));
        foreach (Element::children($colleges) as $college_delta) {
          $variables['items'][$college_delta]['content'] = $colleges[$college_delta];
          $variables['items'][$college_delta]['attributes'] = !empty($colleges['#items'][$college_delta]->_attributes) ? new Attribute($colleges['#items'][$college_delta]->_attributes) : new Attribute();
        }
        foreach ($existing_links as $delta => $link) {
          $variables['items'][$delta + $college_count] = $link;
        }
      }
      break;

  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function grad_admissions_core_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  switch ($variables["element"]["#field_name"]) {
    case 'field_area_of_study_grad_intro':
      $suggestions[] = 'field__bold_headline_label';
      break;

  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for taxonomies.
 */
function grad_admissions_core_theme_suggestions_taxonomy_term_alter(&$suggestions, $variables) {
  if ($variables['elements']['#view_mode'] == 'teaser') {
    $suggestions[] = 'taxonomy_term__teaser';
  }
}

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function grad_admissions_core_preprocess_html(&$variables) {
  $variables['#attached']['library'][] = 'grad_admissions_core/global';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grad_admissions_core_preprocess_node(&$variables) {

  $node = $variables["node"];
  switch ($node->getType()) {
    case 'area_of_study':
      $variables['#attached']['library'][] = 'uids_base/twocol';
      $variables['#attached']['library'][] = 'grad_admissions_core/area-of-study';
      break;

  }
}
