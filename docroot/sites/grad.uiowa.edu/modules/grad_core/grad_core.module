<?php

/**
 * @file
 * Contains grad_core.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_entity_presave().
 */
function grad_core_entity_presave(EntityInterface $entity) {
  switch ($entity->bundle()) {
    case 'mentor':
    case 'scholar':
      // Setting the title with the first/last name values.
      $output = $entity->get('field_person_first_name')->value . " " . $entity->get('field_person_last_name')->value;
      $entity->setTitle($output);
      break;

  }
}

/**
 * Implements hook_form_alter().
 */
function grad_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    // Node form modifications.
    case 'node_scholar_edit_form':
    case 'node_scholar_form':
    case 'node_mentor_edit_form':
    case 'node_mentor_form':
      _sitenow_node_form_defaults($form, $form_state);
      break;

  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grad_core_preprocess_page_title(&$variables) {
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute()) {
    $route_name = \Drupal::routeMatch()->getRouteName();
    if ($route_name === 'entity.node.canonical') {
      $node = \Drupal::routeMatch()->getParameter('node');
    }
    elseif ($route_name === 'entity.node.preview') {
      $node = \Drupal::routeMatch()->getParameter('node_preview');
    }
    if (isset($node)) {
      switch ($node->getType()) {
        case 'mentor':
          if ($node->hasField('field_person_position') && !$node->get('field_person_position')
            ->isEmpty()) {
            $variables['subtitle'] = $node->field_person_position->value;
          }
          break;
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function grad_core_theme($existing, $type, $theme, $path) {
  return [
    'node__mentor__teaser' => [
      'template' => 'node--mentor--teaser',
      'base hook' => 'node',
    ],
    'node__view__srop_scholars' => [
      'template' => 'node--view--srop-scholars',
      'base hook' => 'node',
    ],
    'views_view_unformatted__mentor_card' => [
      'template' => 'views-view-unformatted--mentor-card',
      'base hook' => 'view',
    ],
    'views_view_unformatted__scholar_card' => [
      'template' => 'views-view-unformatted--scholar-card',
      'base hook' => 'view',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function grad_core_preprocess_node(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $variables['node'];

  // Append person credentials to the node label in the teaser view mode. This
  // happens on the full node view for all people by default in LBC.
  // @see \Drupal\layout_builder_custom/EventSubscriber\SectionComponentSubscriber
  if ($node->getType() === 'mentor' && $variables['view_mode'] === 'teaser') {
    if ($node->hasField('field_person_credential') && $creds = $node->get('field_person_credential')->getString()) {
      $title = $node->getTitle();
      $variables['label'] = t('@title, @creds', [
        '@title' => $title,
        '@creds' => $creds,
      ]);
    }
  }

}
