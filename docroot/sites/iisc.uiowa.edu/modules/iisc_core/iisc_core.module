<?php

/**
 * @file
 * Primary module hooks for IISC Core module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\iisc_core\Entity\Partner;
use Drupal\iisc_core\Entity\Project;

/**
 * Implements hook_entity_bundle_info_alter().
 */
function iisc_core_entity_bundle_info_alter(array &$bundles) {
  if (isset($bundles['node']['project'])) {
    $bundles['node']['project']['class'] = Project::class;
  }
  if (isset($bundles['node']['partner'])) {
    $bundles['node']['partner']['class'] = Partner::class;
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function iisc_core_entity_extra_field_info() {
  $extra = [];

  $extra['node']['project'] = [
    'display' => [
      'project_created_date' => [
        'label' => t('Created Date'),
        'description' => t('Date the node was created.'),
        'weight' => 100,
        'visible' => TRUE,
      ],
    ],
  ];

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function iisc_core_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  if ($entity->getType() === 'project' && $display->getComponent('project_created_date')) {
    $created = $entity->get('created')->value;
    $date = \Drupal::service('date.formatter')->format($created, 'medium');
    $build['project_created_date'] = [
      '#type' => 'container',
      '#attributes' => [
        'class' => ['project-created-date field--label-inline'],
      ],
      'date' => [
        '#type' => 'markup',
        '#markup' => $date,
        '#weight' => 0,
      ],
      'title' => [
        '#type' => 'html_tag',
        '#tag' => 'div',
        '#value' => t('Published'),
        '#attributes' => [
          'class' => ['field__label'],
        ],
        '#weight' => -10,
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_field().
 */
function iisc_core_preprocess_field(&$variables, $hook) {
  switch ($variables['element']['#field_name']) {
    case 'body':
      if ($variables['element']['#view_mode'] == 'teaser') {
        uiowa_core_set_attributes($variables, 'padding--block--sm');
      }
      break;

  }
}

/**
 * Implements hook_form_alter().
 */
function iisc_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  switch ($form_id) {
    // Node form modifications.
    case 'node_partner_edit_form':
    case 'node_partner_form':
    case 'node_project_edit_form':
    case 'node_project_form':
      _sitenow_node_form_defaults($form, $form_state);
      break;

  }
}

/**
 * Implements template_preprocess_views_view().
 */
function iisc_core_preprocess_views_view(&$variables) {
  // Check if the current view has a specific ID or display ID.
  if ($variables['view']->id() == 'iisc_projects') {
    // Attach the library using the #attached property.
    $variables['#attached']['library'][] = 'uids_base/view-bef';
  }
}
