<?php

/**
 * @file
 * Module code for signage.sites.uiowa.edu.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityAutocompleteMatcher;
use Drupal\Core\Entity\EntityAutocompleteMatcherInterface;

/**
 * Implements hook_form_alter().
 */
function sitessignage_core_form_alter(&$form, FormStateInterface $form_state, $form_id): void {

  // Define the forms to remove the "Other groups" field from.
  $og_audience_other_groups_forms = ['node_sign_form', 'node_sign_edit_form', 'node_slide_form', 'node_slide_edit_form'];

  // If our form ID is in the relevant list of form IDs...
  if (in_array($form_id, $og_audience_other_groups_forms, TRUE)) {

    // If our form has other_groups defined...
    if (isset($form['og_audience']['other_groups'])) {

      // Remove access from the other groups field.
      $form['og_audience']['other_groups']['#access'] = FALSE;
    }
  }

  if ($form_id == 'og_membership_default_add_form') {
    // If user does not exist in autocomplete to add user to group, give option to add user to site.
    // $form['uid'] - how to access the username field
//    if ($form_state->getUserInput()['uid'][0]['target_id']) {
//      $foo = 'bar';
//    }
//    $options = $form["uid"]["widget"][0]["target_id"]['#title']->getOptions();
//    if ($options == NULL) {
//      $options = ['Add new user'];
//    }
//    else {
//      $options += $options['Add new user'];
//    }
//    $matches = getMatches('og_autocomplete' [], [], $string = '');

    $foo = 'bar';

  }
}

/**
 * Implements hook_entity_presave().
 */
//function sitessignage_core_entity_presave(EntityInterface $entity) {
//  $foo = 'bar';
//}
