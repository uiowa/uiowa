<?php

/**
 * @file
 * Contains uipress_core.module.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function uipress_core_field_widget_entity_reference_paragraphs_form_alter(&$element, &$form_state, $context) {
  if ($element['#paragraph_type'] == 'book_type') {
    if (isset($element['subform']['field_book_ebook_ownership'])) {
      // Set the field_book_ebook_ownership field to only be visible when ebook
      // the type of book selected.
      $delta = $element['#delta'];

      $element['subform']['field_book_ebook_ownership']['#states'] = [
        'visible' => [
          ':input[name="field_book_type[' . $delta . '][subform][field_book_type]"]' => [
            'value' => 'eBook',
          ],
        ],
      ];
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function uipress_core_preprocess_paragraph__book_type(&$variables) {
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute()) {
    $paragraph = $variables['paragraph'];

    if ($paragraph->bundle() == 'book_type') {

      if ($paragraph->hasField('field_book_sale_price') && $paragraph->hasField('field_book_sale_start_date') && $paragraph->hasField('field_book_sale_expiry_date')) {
        if (!$paragraph->get('field_book_sale_price')->isEmpty()) {
          // If start date exists make sure current date is after start date.
          $in_range = TRUE;
          $now = date('m-d-Y');
          $start = $paragraph->get('field_book_sale_start_date')->value;
          if (isset($start)) {
            $start = date('m-d-Y', strtotime($start));
            $in_range = $now >= $start;
          }

          // If end date exists make sure current date is before end date.
          $end = $paragraph->get('field_book_sale_expiry_date')->value;
          if ($in_range && isset($end)) {
            $end = date('m-d-Y', strtotime($end));
            $in_range = $now < $end;
          }
          // If neither condition is true unset display of sale price.
          if (!$in_range) {
            unset($variables['content']['field_book_sale_price'], $variables['content']['field_book_sale_code']);
          }
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function uipress_core_preprocess_node(&$variables) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $variables['node'];

  // Append person credentials to the node label in the teaser view mode. This
  // happens on the full node view for all people by default in LBC.
  // @see \Drupal\layout_builder_custom/EventSubscriber\SectionComponentSubscriber
  if ($node->getType() == 'book' && $variables['view_mode'] == 'teaser') {
    $default_classes = [
      'card--list',
      'card--media-right',
      'card--centered-left',
    ];

    $media_styles = [
      'card__media--medium',
      'card__media',
    ];
    $attributes = new Attribute($variables['attributes']);
    $attributes->addClass($default_classes);

    $media_attributes = new Attribute();
    $media_attributes->addClass($media_styles);

    $variables['card_options'] = [
      'attributes' => $attributes,
      'media_attributes' => $media_attributes,
      'card_link_url' => $node->toUrl()->toString(),
      'card_title' => $node->getTitle(),
      'card_image' => $variables['content']['field_image'],
      'card_subtitle' => $variables['content']['field_book_author'],
      'card_meta' => $variables['content']['field_book_type'],
      'headline_level' => 'h3',
      'headline_class' => 'headline headline--uppercase',
    ];
    $thing = 'that';
  }
}

/**
 * Implements hook_theme().
 */
function uipress_core_theme($existing, $type, $theme, $path) {
  return [
    'node__book__teaser' => [
      'template' => 'node--book--teaser',
      'base hook' => 'node',
    ],
  ];
}
