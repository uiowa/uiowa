{"version":3,"sources":["components/elements/bg-images/bg-images.css","../hds/assets/scss/_utilities.scss"],"names":[],"mappings":"AAAA,mCC0KI,2BAA4B,CAC5B,qBAAsB,CACtB,0BACF,CAAC,uCAEI,YAAa,CACb,8CACE,aAAc","file":"bg-images.css","sourcesContent":["[data-responsive-background-image]{background-repeat:no-repeat;background-size:cover;background-position:center}[data-responsive-background-image] img{display:none}.no-js [data-responsive-background-image] img{display:block}\n","//=======================================================\n// Mixins\n//=======================================================\n\n// Clearfix\n@mixin clearfix {\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n\n// Makes an element visually hidden, but accessible.\n// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n@mixin element-invisible {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n}\n\n// Turns off the element-invisible effect.\n@mixin element-invisible-off {\n  position: static !important;\n  clip: auto;\n  height: auto;\n  width: auto;\n  overflow: auto;\n}\n\n// Makes an element visually hidden by default, but visible when focused.\n@mixin element-focusable {\n  @include element-invisible;\n  &:active,\n  &:focus {\n    @include element-invisible-off;\n  }\n}\n\n@mixin fas() {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n  font-family: \"Font Awesome 5 Free\";\n  font-weight: 900;\n}\n\n\n// Gold Bracket ///////////////\n\n@mixin bracket() {\n  position: relative;\n  @include margin($top: $sm, $bottom: $sm);\n  padding: $md;\n  &:before,\n  &:after {\n    content: ' ';\n    position: absolute;\n    top: 0;\n    width: $sm;\n    height: 100%;\n    border: 3px solid $primary;\n  }\n\n  &:before {\n    left: -1em;\n    border-right: 0;\n  }\n\n  &:after {\n    right: -1em;\n    border-left: 0;\n  }\n}\n\n// Media Queries ///////////////\n\n@mixin breakpoint($class) {\n  @if $class==xs {\n    @media (max-width: 767px) {\n      @content;\n    }\n  }\n\n  @else if $class==sm {\n    @media (min-width: 768px) {\n      @content;\n    }\n  }\n\n  @else if $class==menu {\n    @media (min-width: 855px) {\n      @content;\n    }\n  }\n\n  @else if $class==md {\n    @media (min-width: 992px) {\n      @content;\n    }\n  }\n\n  @else if $class==lg {\n    @media (min-width: 1200px) {\n      @content;\n    }\n  }\n\n  @else if $class==container {\n    @media (min-width: 84.375em) {\n      @content;\n    }\n  }\n\n  @else {\n    @warn \"Breakpoint mixin supports: xs, sm, md, lg\";\n  }\n}\n\n////// Flexbox\n\n@mixin flexbox {\n  display: flex;\n}\n\n//fg flex-grow fs flex-shrink fb flex-basis\n@mixin flex($fg: 1, $fs: 0, $fb: auto) {\n  flex: $fg $fs $fb;\n}\n\n@mixin flex-direction($value: row) {\n  flex-direction: $value;\n}\n\n@mixin flex-wrap($value: nowrap) {\n  flex-wrap: $value;\n}\n\n@mixin order($int: 0) {\n  order: $int;\n}\n\n\n//////////  Padding/Margin\n\n@mixin padding($top: null, $right: null, $bottom: null, $left: null) {\n  padding-top: $top;\n  padding-right: $right;\n  padding-bottom: $bottom;\n  padding-left: $left;\n}\n\n@mixin margin($top: null, $right: null, $bottom: null, $left: null) {\n  margin-top: $top;\n  margin-right: $right;\n  margin-bottom: $bottom;\n  margin-left: $left;\n}\n\n\n//////////  Responsive BG Image\n\n@mixin responsive-bg {\n  [data-responsive-background-image] {\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center\n  }\n  [data-responsive-background-image] img {\n       display: none;\n       .no-js & {\n         display: block;\n       }\n  }\n}\n\n\n// Extends ///////////////\n%shadow {\n  text-shadow: 0 0 20px rgba(0, 0, 0, 0.8);\n}\n\n\n%no-ul-list {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  >li {\n    display: inline-block;\n    list-style-type: none;\n    margin: 0;\n  }\n}\n\n%container  {\n  margin: 0 $gutter;\n  position: relative;\n     @include breakpoint(container) {\n       max-width: 81.875em;\n       margin: 0 auto;\n     }\n}\n\n// Font Smoothing ///////////////\n%font-smoothing-on {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n%font-smoothing-off {\n  -webkit-font-smoothing: auto;\n  -moz-osx-font-smoothing: auto;\n}\n\n// Buttons\n\n\n%bttn {\n  border: none;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  font-size: $base-font-size;\n  font-weight: $font-weight-bold;\n  //@include margin($top: auto);\n  @include padding($top: $sm-md, $right: $xlg, $bottom: $sm-md, $left: $xlg);\n  /*  &:before {\n      content: '';\n      position: absolute;\n      left: 50%;\n      bottom: 0;\n      width: 100%;\n      height: 4px;\n      background-color: $primary;\n      transform-origin: center;\n      transform: translate(-50%, 0) scaleX(0);\n      transition: transform 0.3s ease-in-out;\n    }\n    &:hover::before {\n      transform: translate(-50%, 0) scaleX(1);\n    }\n    */\n}\n\n\n%bttn--primary {\n  color: $secondary;\n  background: $primary;\n  /*&::before {\n    background-color: $white;\n  }\n  */\n}\n\n%bttn--secondary {\n  color: $primary;\n  background: $secondary;\n}\n\n%bttn--secondary__light {\n  color: $white;\n}\n\n%bttn--tertiary {\n  color: $secondary;\n  background: $white;\n}\n\n%bttn--full {\n  display: block;\n}\n\n%bttn--outline {\n  border: 1px solid $primary;\n  i {\n    color: $primary;\n    font-size: $h6-font-size;\n    @include padding($right: $sm);\n  }\n}\n"]}