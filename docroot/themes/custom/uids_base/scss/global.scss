@import "uids/scss/uids-core.scss";
$imgpath: '../../uids/assets/images';

// @todo update .column-container:has(nav) when once https://caniuse.com/css-has greater support.
// Unset container-type for regions that use absolute positioning.
// Horizontal navigation, timeline block, lb-direct-add.
.layout__region--unset-type .column-container,
.layout-builder .column-container {
  container-type: unset;
}

// Specify container-type for cards in layout builder.
.layout-builder .layout-builder-block.block-inline-blockuiowa-card,
.layout-builder .layout-builder-block.block-inline-blockuiowa-event,
.layout-builder .layout-builder-block.block-inline-blockuiowa-text-area,
.layout-builder .layout-builder-block.block-inline-blockfeatured-content .column-container,
// Specify container-type for list blocks using views-row class.
.list-container__inner .views-row {
  container-type: inline-size;
  container-name: column;
}

// Word break classes.
.block--word-break,
.block-inline-blockuiowa-text-area,
.block-field-blocknodepagebody {
  a {
    word-break: break-word;
  }
  .headline {
    a {
      word-break: unset;
    }
  }
}

// Bust out of container.
.block--edge-to-edge {
  margin: 0 calc(50% - 50vw);
  > .form--inline {
    @extend %container;
  }
}

details {
  summary {
    // So we don't wrap the arrow away from the label.
    white-space: nowrap;

    // Ensure users get pointer cursor for details.
    cursor: pointer;
  }
}

// Set an element to display inline.
.element--inline-breakpoint {
  @include breakpoint(sm) {
    display: inline-flex;
  }
}

.element--inline {
  display: inline-flex;
  align-items: baseline;
}

// Align items in a grid to the top.
.element--align-top {
  align-self: start;
}

// Position absolute.
.element--absolute {
  position: absolute;
  z-index: 1;
}

.element--absolute--left {
  left: $desktop-width-gutter;
}

.element--absolute--bottom {
  bottom: $desktop-width-gutter;
}

// Set object to cover.
.element--cover {
  * {
    object-fit: cover;
    height: 100%;
  }
  .contextual-links,
  .leaflet-control {
    height: auto;
  }
}


// Containers within a background color useful for views blocks.
.block--bg-container {
  .block__headline  {
    @extend %container;
    //hack to prevent a change in container width (which is in em) when font size isn't 1em
    max-width: 1310px;
  }
  & > div {
    margin: 0 $gutter;

    @include breakpoint(page-container) {
      max-width: 81.875em;
      margin: 0 auto;
    }
  }
}

// Flex basis for all blocks and views

.layout__region {

  .block,
  .view,
  .card,
  .banner,
  .cta__wrapper,
  .slider,
  .stat {
    flex-basis: 100%;
    min-width: 0;
  }
  .card {
    height: 100%;
  }
}

// set equal height columns
.layout {
  .layout__region--first,
  .layout__region--second,
  .layout__region--third,
  .layout__region--fourth {
    @include breakpoint(sm) {
      display: grid;
    }
  }
  &.section-alignment__start {
    .layout__region {
      display: inherit;
      flex-wrap: inherit;
    }
  }
}

// Unset equal height columns
.section-alignment__start {
  .layout__spacing_container {
    align-items: flex-start;
  }
}

// Layout container padding
.layout__container {
  margin-top: 0;
  padding-bottom: $mobile-width-gutter;
  // This will be overridden by a subsequent style for 1+n containers.
  padding-top: $mobile-width-gutter;

  @include breakpoint(sm) {
    padding-top: $desktop-width-gutter;
    padding-bottom: $desktop-width-gutter;
  }

  &:first-child {
    padding-top: 0;
    .region-pre-footer & {
      padding-top: $mobile-width-gutter;
      @include breakpoint(sm) {
        padding-top: $desktop-width-gutter;
      }
    }
  }

  // @todo Should this be moved to the header layout scss file?
  &.layout--title {
    padding-bottom: 1.25rem;

    &.layout--title--hidden {
      padding-top: 0;
      padding-bottom: 0;
    }
  }

  &.layout--title + &:not([class*="bg-"]) {
    padding-top: 0;
  }

  // Define a list of background treatments.
  $backgrounds:
    ':not([class*="bg-"])',
    '.bg--gold',
    '.bg--black',
    '.bg--gray',
    '.bg-pattern--brain',
    '.bg-pattern--brain-reversed',
    '.bg-pattern--brain-black';

  // Loop through each background.
  @each $background in $backgrounds {

    // When an element follows a previous element
    // with the same background treatment, remove the
    // top padding of the target element.
    &#{$background} + &#{$background} {
      padding-top: 0;

      // Necessary to restore padding
      &.section-padding {
        &__top-restored {
          padding-top: $desktop-width-gutter;
        }

        &__top-extra {
          padding-top: 6rem;
        }
      }
    }
  }

  // Add default padding if page title is hidden
  &.layout--title--hidden + &:not([class*="bg-"]) {
    padding-top: $desktop-width-gutter;

    &.section-padding {
      &__removed-top {
        padding-top: 0;
      }
    }
  }

  // LBS padding classes
  &.section-padding {
    &__removed-top {
      padding-top: 0;
      .region-pre-footer & {
        padding-top: 0;
      }
    }

    &__removed-bottom {
      padding-bottom: 0;
    }

    &__top-restored {
      padding-top: $desktop-width-gutter;
    }

    &__top-extra {
      padding-top: 6rem;
      .region-pre-footer & {
        padding-top: 6rem;
      }
    }

    &__bottom-extra {
      padding-bottom: 6rem;
    }
  }

  // @todo Where should this live?
  .block--wrapper,
  .block-inline-blockuiowa-text-area {
    min-width: 0;

    &.border,
    &[class*="bg--"],
    &[class*="bg-pattern--"] {
      padding: $desktop-width-gutter;
    }
    &.border.block-padding__all--minimal,
    &[class*="bg--"].block-padding__all--minimal,
    &[class*="bg-pattern--"].block-padding__all--minimal {
      padding: 2rem;
    }
    &.border.block-padding__all--extra,
    &[class*="bg--"].block-padding__all--extra,
    &[class*="bg-pattern--"].block-padding__all--extra {
      padding: 6rem;
    }
  }
}

// @todo remove when https://github.com/uiowa/uids/issues/714 is complete.
.border {
  border: 1px solid rgba(0, 0, 0, 0.25);
  &--top {
    border-top: 1px solid rgba(0, 0, 0, 0.25);
  }
  &--right {
    border-right: 1px solid rgba(0, 0, 0, 0.25);
  }
  &--bottom {
    border-bottom: 1px solid rgba(0, 0, 0, 0.25);
  }
  &--left {
    border-left: 1px solid rgba(0, 0, 0, 0.25);
  }
}

// For sidebars: remove padding from adjacent blocks if they are the same and don't have a margin top set
.block[class*="bg--gray"].block-padding__all + .block[class*="bg--gray"].block-padding__all:not(.block-margin__top) {
  margin-top: -1.5rem;
  padding-top: 0;
}

// default spacing for pages without layout builder

// Neither Paragraphs or Layout Builder.
body:not(.page-node-type-article, .page-node-type-page).layout-builder-disabled main.page__container {
  margin-bottom: 1.25rem;
}

// SiteNow Paragraphs Page
.page-node-type-page.layout-builder-disabled main.page__container {
  max-width: 100%;
  margin: 0;
}

.path-node.layout-builder-disabled:not(.page-node-type-page) {
  .node--view-mode-full {
    margin-bottom: $lg;
  }
}

.layout-builder-disabled main.page__container {
  margin: 0 $mobile-width-gutter $mobile-width-gutter;

  @include breakpoint(page-container) {
    margin: 0 auto;
    width: 100%;
  }
}

.layout-builder-disabled .uiowa-bar .page__container {
  margin-top: 0;

  @include breakpoint(page-container) {
    margin: 0 auto;
  }
}

.page__container.layout__container {
  max-width: 100%;
}

// default spacing for layout builder pages with container set in theme settings

.content__container {
  .layout__spacing_container {
    @include container-width;
  }

  .page__container--extended,
  .page__container--extended.layout--has-sidebar,
  .page__container--extended.sidebar-invisible {
    .layout__spacing_container {
      @include breakpoint(page-container) {
        max-width: 100em;
        padding-right: $lg;
        padding-left: $lg;
      }
    }
  }

  .page__container--narrow,
  .page__container--narrow.layout--has-sidebar,
  .page__container--narrow.sidebar-invisible {
    .layout__spacing_container {
      @include breakpoint(md) {
        max-width: 63.75em;
        margin: 0 auto;
        padding-right: 1.25rem;
        padding-left: 1.25rem;
      }
      @include breakpoint(page-container) {
        padding-right: 0;
        padding-left: 0;
      }
    }
  }
}

// default left/right gutter spacing for full width settings without layout builder
// settings if page container full or edge is selected on section

.page__container--full.layout__container,
.page__container--full.layout--has-sidebar,
.page__container--full.sidebar-invisible {
  .layout__spacing_container {
    margin-right: $mobile-width-gutter;
    margin-left: $mobile-width-gutter;
    max-width: 100%;

    @include breakpoint(md) {
      margin-right: $desktop-width-gutter;
      margin-left: $desktop-width-gutter;
    }
  }
}

.page__container--edge,
.page__container--edge.layout--has-sidebar,
.page__container--edge.sidebar-invisible {
  .layout__spacing_container {
    max-width: 100%;
    margin-right: 0;
    margin-left: 0;
  }
}

// Reverse column order lb style

.section-order__reversed {
  // sidebar layout
  &.layout--has-sidebar {
    .layout__spacing_container {
      .layout__region--sidebar {
        order: 2;
        @include breakpoint(md) {
          order: inherit;
        }
      }
    }
  }
  // two column
  &.layout--twocol {
    .layout__spacing_container {
      display: grid;

      .layout__region--first,
      .layout__region--sidebar,
      .layout__region--main {
        order: 2;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--second,
      .layout__region--content,
      .layout__region-container {
        order: 2;
        @include breakpoint(md) {
          order: inherit;
        }
      }
      .layout__region-container {
        margin-bottom: $mobile-height-gutter;
      }
    }
  }
  // three col reverse column order lb style
  &.layout--threecol {
    .layout__spacing_container {
      display: grid;

      .layout__region--first {
        order: 3;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--second {
        order: 2;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--third {
        order: 1;
        @include breakpoint(md) {
          order: inherit;
        }
      }
    }
  }
  // four col reverse column order lb style
  &.layout--fourcol {
    .layout__spacing_container {
      display: grid;

      .layout__region--first {
        order: 4;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--second {
        order: 3;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--third {
        order: 2;
        @include breakpoint(md) {
          order: inherit;
        }
      }

      .layout__region--fourth {
        order: 1;
        @include breakpoint(md) {
          order: inherit;
        }
      }
    }
  }
}

// Add margins for all stacked layout regions for mobile.
.layout--fourcol,
.layout--threecol,
.layout--twocol,
.layout--has-sidebar {
  .layout__region:not(:last-child) {
    margin-bottom: $mobile-height-gutter;
    @include breakpoint(md) {
      margin-bottom: 0;
    }
  }


  // If section order is reversed, add margin back into last-child.
  &.section-order__reversed {
    .layout__region:last-child {
      margin-bottom: $mobile-height-gutter;
      @include breakpoint(md) {
        margin-bottom: 0;
      }
    }

    .layout__region:first-child {
      margin-bottom: 0;
    }
  }

  // Remove mobile margins if column spacing is removed.
  &.column-spacing__removed {
    .layout__region:not(:last-child) {
      margin-bottom: 0;
    }
    &.section-order__reversed {
      .layout__region:last-child {
        margin-bottom: 0;
      }
    }
  }
}

// Unset margin for regions within card layout.
.layout--twocol {
  .layout__region.layout__region--card-media {
    margin-bottom: 0;
  }
}

// Container fix for responsive tables

.layout__spacing_container {
  min-width: 0;
}

// Block Margins / Padding

.block-padding,
.element--padding {
  &__top {
    padding-top: $desktop-width-gutter;
    &--minimal {
      padding-top: 2rem;
    }
  }
  &__right {
    padding-right: $desktop-width-gutter;
    &--minimal {
      padding-right: 2rem;
    }
  }
  &__bottom {
    padding-bottom: $desktop-width-gutter;
    &--minimal {
      padding-bottom: 2rem;
    }
  }
  &__left {
    padding-left: $desktop-width-gutter;
    &--minimal {
      padding-left: 2rem;
    }
  }
  &__all {
    padding: $desktop-width-gutter;
  }
  &__all--extra {
    padding: 6rem;
  }
  &__all--minimal {
    padding: 2rem;
  }
}

// CSS logical property padding utility classes.
.padding--block--sm {
  padding-block: 0.5rem;
}

.padding--inline-start--sm {
  padding-inline-start: 0.5rem;
}

.padding--inline-start--md {
  padding-inline-start: 1rem;
}

.padding--inline-end--sm  {
  padding-inline-end: 0.5rem;
}

.padding--inline-end--md  {
  padding-inline-end: 1rem;
}

.padding--inline--md {
  padding-inline: 1rem;
}

.block-margin {
  &__top {
    margin-top: $md;

    &--extra {
      margin-top: $md;
      @include breakpoint(sm) {
        margin-top: $mobile-height-gutter;
      }
    }
  }

  &__right {
    @include breakpoint(sm) {
      margin-right: $md;
    }
  }

  &__bottom {
    margin-bottom: $md;

    &--extra {
      margin-bottom: $md;
      @include breakpoint(sm) {
        margin-bottom: $mobile-height-gutter;
      }
    }
  }

  &__left {
    @include breakpoint(sm) {
      margin-left: $md;
    }
  }
}

// Set spacing as the default for mobile.
.layout__container {
  &:not([class*="grid-"]):not([class*="layout--title"]) {
    .layout__region {
      .block + .block {
        margin-top: 1.6rem;

        &:first-child {
          margin-top: 0;
        }
      }
      // Allow margin top and top extra to override.
      .block + .block.block-margin__top {
        margin-top: $md;
      }
      .block + .block.block-margin__top--extra {
        margin-top: $md;
        @include breakpoint(sm) {
          margin-top: $mobile-height-gutter;
        }
      }
      // Remove default margins style.
      .block + .block.block-margin__default--removed {
        margin-top: 0;
      }
    }
  }
}

// Override default for blocks adjacent to page title/breadcrumbs.
.layout__container {
  .layout__region {
    .block.block-system-breadcrumb-block + .block[class*="block-field-"],
    .block.block-field-blocknodepagetitle + .block[class*="block-field-"],
    .block.block-field-blocknodepersontitle + .block[class*="block-field-"] {
      margin-top: 0;
    }
  }
}

// No results text
.view-empty,
.events-empty,
.uiowa-aggregator-no-results {
  p {
    font-size: 1rem;
  }
}

// mobile search
.search-button[aria-expanded="true"] {
  margin-left: auto;
}

// skip link
.skip-link-region {
  text-align: center;
  background: #f1f1f1;
  display: block;

  a {
    color: blue;
    padding: 10px;
    display: block;
  }
}

// todo move back to uids as toc style also create tag style for term edit
.view-a-z-list,
.view-book-a-z-list,
.view-book-search,
.view-book-whats-new {
  .view-header {
    margin-bottom: $md;
  }

  .views-row {
    margin-bottom: $md;
    font-size: 1.3rem;
    border-bottom: 1px solid $light;
    padding: $sm 0;

    &:last-child {
      border-bottom: none;
    }

    a {
      text-decoration: none;
      font-weight: $font-weight-light;
      color: $secondary;

      &:hover,
      &:focus {
        text-decoration: underline;
      }
    }
  }
}

.view-book-toc {
  span {
    margin-bottom: $md;
    font-size: 1.3rem;
    padding: $sm 0;

    a {
      text-decoration: none;
      font-weight: $font-weight-light;
      color: $secondary;
    }
  }

  ul li {
    list-style: inherit;
  }
}

.view-book-toc .views-field-book-owner,
.view-book-whats-new .views-field-book-amended-date {
  font-size: small;
  font-weight: $font-weight-light;
  color: $text-muted;
  margin-left: $sm-md;
}

.view-display-id-attachment_a_z_list,
.view-display-id-attachment_book_a_z_list,
.view-display-id-attachment_services {
  >div {
    @include flexbox;
    @include margin($top: 0, $left: 0, $bottom: $xlg);
    flex-wrap: wrap;

    span {
      border: 1px solid $grey-light;
      display: flex;
      text-align: center;
      margin: 0 $sm $sm 0;
      color: $grey;
      height: 3rem;
      width: 3rem;
      align-items: center;
      justify-content: center;

      @include breakpoint(page-container) {
        border-right: none;
        margin: 0;
        flex: 1;
      }

      a {
        display: flex;
        text-decoration: none;
        color: $secondary;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: 100%;

        &:hover,
        &:focus,
        &.is-active {
          background: $light;
        }
      }

      &:last-child {
          @include breakpoint(page-container) {
            border-right: 1px solid $grey-light;
        }
      }
    }
  }
}

// Measurer class useful for ensuring tables do not reflow
//     while interacting with a cell's contents.
// NOTE: Should only be used with 'aria-hidden="true"'.
.width-measurer {
  height: 0px;
  pointer-events: none;
  opacity: 0;
  overflow: hidden;
}

// @todo remove

.uids-component--alert {
  margin-top: 0;
}

// Extra padding to help browsers with a full menu drawer
.o-canvas__menu .region-primary-menu {
  &::after {
    float: left;
    padding-bottom: 100%;
    content: '';
    clear: both;
    display: list-item;
    color: #fff;
  }
  @include breakpoint(sm) {
    &::after {
      padding-bottom: 50px;
    }
  }
}

@media all and (min-width: 0px) and (max-width: 855px) and (-ms-high-contrast: none),
(-ms-high-contrast: active) {
  .o-canvas__group {
    -ms-flex-preferred-size: 100% !important;
    flex-basis: 100% !important;
  }
}

.layout--twocol.layout,
.layout--twocol.layout .layout__spacing_container {
  flex-basis: 100%;
}

.layout--onecol {

  .feature,
  .banner {
    flex-basis: 100%;

    .section-column__row & {
      flex-basis: unset;
    }
  }
}

.block-inline-blockuiowa-collection {
  flex-basis: 100%;
  min-width: 0;
}

.screen-reader-text {
  @include element-invisible;
}

@keyframes fadeIn {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

img.lazyload {
  opacity: 0;
  transition: opacity 500ms ease-in-out;
}

img.lazyload.loaded {
  opacity: 1;
}
