@import "uids3/assets/scss/_variables.scss";
@import "uids3/assets/scss/_utilities.scss";
@import "view-calendar.scss";
@import "view-bef.scss";

// Use "views-form--stacked" class for exposed forms in a sidebar column.

.views-exposed-form {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 2rem;
  position: relative;

  [type=checkbox], [type=radio] {
    height: 1.2rem;
    width: 1.2rem;
    margin: 0 .35rem 0 .25rem;
    -webkit-transform: scale(1.3, 1.3);
  }
  [type='checkbox']+label,
  [type='radio']+label {
    font-weight: $font-weight-normal;
    flex-basis: 75%;
  }

  .form-type-checkbox {
    display: flex;
  }

  &.uids-content:not(.uids-search) {
    padding: 5px 19px;

    .views-form--stacked & {
      padding: 1rem 1.5rem;
    }

    .form--inline {
      align-items: flex-start;
      flex-wrap: wrap;
    }
    select,
    [type=text] {
      .views-form--stacked & {
        margin-bottom: 0;
      }
    }

    .form-item {
      .views-form--stacked & {
        margin-top: 1rem;
        margin-bottom: 1rem;
        @include breakpoint(sm) {
          margin-top: .5rem;
          margin-bottom: .5rem;
        }
      }
      &.form-type-checkbox {
        .views-form--stacked & {
          margin-bottom: 1rem;
        }
      }
    }

    .form-item:not(:last-child),
    .form-actions:not(:last-child) {
      @include breakpoint(sm) {
        margin-right: 1em;
        .views-form--stacked & {
          margin-right: 0;
        }
      }
    }

    .form-actions {
      input[id^='edit-reset'] {
        color: var(--brand-secondary);
        background: var(--brand-primary);
      }

      @include breakpoint(sm) {
        margin-top: 2.5em;
      }
      .views-form--stacked & {
        width: 100%;
        margin-top: .5rem;
        display: flex;
        gap: 1.5rem;
      }
      .button {
        .views-form--stacked & {
          flex: 1;
        }
      }
    }

    .button {
      @include bttn--secondary;
      border: 0;
      padding-top: 13px;
      padding-bottom: 13px;
    }
  }


  details {
    &.form-wrapper {
      display: block;
      border: 1px solid;
      border-color: #c4c4c4;
      flex-basis: 100%;
      background: #fff;
    }

    .details-wrapper {
      padding: 0 1rem 1rem;
    }

    summary {
      position: relative;
      padding: 1rem;
      cursor: pointer;
    }

    &[open] summary {
      border-bottom: 1px solid;
      border-color: #c4c4c4;
      margin-bottom: 1em;
    }
  }

  fieldset {
    border: 0;
    padding: 0;
  }

  fieldset {
    &.fieldgroup {
      padding: 0;
    }
    .fieldset-legend {
      display: block;
      margin-bottom: 1rem;
      font-size: 0.8rem;
      font-weight: 700;
      line-height: 1.8;
    }
  }

  .form--inline {
    @include breakpoint(sm) {
      display: flex;
      justify-content: flex-start;
      align-items: flex-end;
      .views-form--stacked & {
        flex-wrap: wrap;
      }
    }
  }

  .js-form-item {
    flex: auto 1 1;
    @include breakpoint(sm) {
      flex: 1;
      .views-form--stacked & {
        flex: 0 1 100%;
      }
    }
  }

  .form-group {
    margin: 0 1rem 1rem 1rem;
  }
}

.bg-dark, .bg-black {
  .pager__item.pager__item--ellipsis {
    color: #5d5656;
  }
  .pager__item a {
    color: $primary;
  }
}
.bg-yellow {
  .pager__item a {
    color: $secondary;
  }
  .pager__item.is-active a {
    color: white;
  }
}

// feed icons

.feed-icons {
  .bttn {
    svg{
      margin-left: 0;
      margin-right: $xsm;
    }
    padding-left: 0;
    padding-right: 0;
  }
}

// default styles for views fields.
.views-field {
  line-height: 1.7;
  margin-top: 0;
  font-size: $content-font-size;
}

// Layout
.grid--twocol--25-75 {
  @include grid-base;
  @include breakpoint(sm) {
    display: grid;
    grid-template-columns: repeat(4,1fr);
    gap: 1.5rem;
    .view-header {
      grid-column: 1 / -1;
    }
    .view-filters {
      grid-area: 2/1/6/2;
      min-width: 200px;
    }

    .view-content, .view-empty {
      grid-area: 2/2/6/5;
      min-width: 0;
    }
  }
  @include breakpoint(page-container) {
    gap: 3rem;
  }
}
