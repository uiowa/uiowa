{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{% set classes = [
  'field',
  'field--name-' ~ field_name|clean_class,
  'field--type-' ~ field_type|clean_class,
  'field--label-' ~ label_display,
] %}
{% set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
] %}

{% if item_tag is empty %}
  {% set item_tag = 'div' %}
{% endif %}

{% if entity_type == 'block_content' %}

  {% for item in items %}
    {{ item.content }}
  {% endfor %}

{% else %}

  {% if label_hidden %}
    {% if multiple %}
      <div{{ attributes.addClass(classes, field_container_classes, 'field__items') }}>
          {% for item in items %}
            <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
          {% endfor %}
      </div>
    {% else %}
        {% for item in items %}
          <{{ item_tag }}{{ attributes.addClass(classes, 'field__item') }}>{{ block('field_icon') }}{{ item.content }}</{{ item_tag }}>
        {% endfor %}
    {% endif %}
  {% else %}
    <div{{ attributes.addClass(classes) }}>
      {% block field_icon %}{% endblock %}
      <div{{ title_attributes.addClass(title_classes).removeClass(remove_classes) }}>{% block field_label_icon %}{% if field_label_icon %}<span role="presentation" class="field__label--icon fas {{ field_label_icon }}"></span>{% endif %}{% endblock %}{{ label }}</div>
      {% if multiple %}
      <div class="field__items {{ field_container_classes }}">
        {% endif %}
        {% block field_items %}
          {% for item in items %}
            <{{ item_tag }}{{ item.attributes.addClass('field__item') }}>{{ item.content }}</{{ item_tag }}>
          {% endfor %}
        {% endblock %}
        {% if multiple %}
      </div>
      {% endif %}
    </div>
  {% endif %}
{% endif %}
