diff --git a/src/Plugin/Linkit/Matcher/NolinkMatcher.php b/src/Plugin/Linkit/Matcher/NolinkMatcher.php
new file mode 100644
index 0000000..90eee02
--- /dev/null
+++ b/src/Plugin/Linkit/Matcher/NolinkMatcher.php
@@ -0,0 +1,39 @@
+<?php
+
+namespace Drupal\linkit\Plugin\Linkit\Matcher;
+
+use Drupal\linkit\MatcherBase;
+use Drupal\linkit\Suggestion\DescriptionSuggestion;
+use Drupal\linkit\Suggestion\SuggestionCollection;
+
+/**
+ * Provides a linkit matcher for route:<nolink>.
+ *
+ * @Matcher(
+ *   id = "nolink",
+ *   label = @Translation("Nolink"),
+ * )
+ */
+class NolinkMatcher extends MatcherBase {
+
+  /**
+   * {@inheritdoc}
+   */
+  public function execute($string) {
+    $suggestions = new SuggestionCollection();
+
+    // Check for the text 'nolink' (e.g. like route:<nolink> with core link
+    // fields) and return route:<nolink> if it exists.
+    if (strpos($string, 'nolink') !== FALSE) {
+      $suggestion = new DescriptionSuggestion();
+      $suggestion->setLabel($this->t('Empty link'))
+        ->setPath('route:<nolink>')
+        ->setGroup($this->t('System'))
+        ->setDescription($this->t('An empty link'));
+
+      $suggestions->addSuggestion($suggestion);
+    }
+    return $suggestions;
+  }
+
+}
diff --git a/tests/src/Kernel/Matchers/NoLinkMatcherTest.php b/tests/src/Kernel/Matchers/NoLinkMatcherTest.php
new file mode 100644
index 0000000..baee8a1
--- /dev/null
+++ b/tests/src/Kernel/Matchers/NoLinkMatcherTest.php
@@ -0,0 +1,53 @@
+<?php
+
+namespace Drupal\Tests\linkit\Kernel\Matchers;
+
+use Drupal\Tests\linkit\Kernel\LinkitKernelTestBase;
+
+/**
+ * Tests nolink matcher.
+ *
+ * @group linkit
+ */
+class NoLinkMatcherTest extends LinkitKernelTestBase {
+
+  /**
+   * The matcher manager.
+   *
+   * @var \Drupal\linkit\MatcherManager
+   */
+  protected $manager;
+
+  /**
+   * {@inheritdoc}
+   */
+  protected function setUp(): void {
+    parent::setUp();
+
+    // Create user 1 who has special permissions.
+    $this->createUser();
+
+    $this->container->get('current_user')->setAccount($this->createUser());
+
+    $this->manager = $this->container->get('plugin.manager.linkit.matcher');
+  }
+
+  /**
+   * Tests nolink matcher.
+   */
+  public function testMatcherWithDefaultConfiguration() {
+    /** @var \Drupal\linkit\MatcherInterface $plugin */
+    $plugin = $this->manager->createInstance('nolink', []);
+    $suggestions = $plugin->execute('nolink');
+    $this->assertCount(1, $suggestions->getSuggestions());
+    $this->assertEquals('route:<nolink>', $suggestions->getSuggestions()[0]->getPath());
+
+    $suggestions = $plugin->execute('<nolink>');
+    $this->assertCount(1, $suggestions->getSuggestions());
+    $this->assertEquals('route:<nolink>', $suggestions->getSuggestions()[0]->getPath());
+
+    $suggestions = $plugin->execute('link');
+    $this->assertCount(0, $suggestions->getSuggestions());
+  }
+
+}
