diff --git a/src/Boot/DrupalBoot8.php b/src/Boot/DrupalBoot8.php
index e367fa596..aa9b47e6d 100644
--- a/src/Boot/DrupalBoot8.php
+++ b/src/Boot/DrupalBoot8.php
@@ -3,8 +3,11 @@
 namespace Drush\Boot;
 
 use Consolidation\AnnotatedCommand\AnnotationData;
+use Consolidation\Config\Loader\ConfigProcessor;
 use Drupal\Core\Database\Database;
 use Drupal\Core\DrupalKernel;
+use Drush\Config\ConfigLocator;
+use Drush\Config\Loader\YamlConfigLoader;
 use Drush\Drupal\DrushLoggerServiceProvider;
 use Drush\Drupal\DrushServiceModifier;
 use Drush\Drush;
@@ -158,7 +161,29 @@ class DrupalBoot8 extends DrupalBoot implements AutoloaderAwareInterface
      */
     public function bootstrapDoDrupalSite(BootstrapManager $manager)
     {
-        // Note: this reports the'default' during site:install even if we eventually install to a different multisite.
+        $siteConfig = $this->confPath() . '/drush.yml';
+
+        if (file_exists($siteConfig)) {
+            $loader = new YamlConfigLoader();
+            $processor = new ConfigProcessor();
+
+            $reference = Drush::config()->export();
+            $context = Drush::config()->getContext(ConfigLocator::SITE_CONTEXT);
+            $processor->add($context->export());
+            $processor->extend($loader->load($siteConfig));
+            $context->import($processor->export($reference));
+            Drush::config()->addContext(ConfigLocator::SITE_CONTEXT, $context);
+
+            $presetConfig = Drush::config()->get('runtime.config.paths');
+            Drush::config()->set('runtime.config.paths', array_merge($presetConfig, [$siteConfig]));
+
+            $this->logger->debug(dt("Loaded Drush config file at !file.", ['!file' => $siteConfig]));
+        } else {
+            $this->logger->debug(dt("Could not find a Drush config file at !file.", ['!file' => $siteConfig]));
+        }
+
+
+        // Note: this reports the 'default' site during site:install even if we eventually install to a different multisite.
         $this->logger->log(LogLevel::BOOTSTRAP, dt("Initialized Drupal site !site at !site_root", ['!site' => $this->getRequest()->getHttpHost(), '!site_root' => $this->confPath()]));
     }
 
diff --git a/src/Config/ConfigLocator.php b/src/Config/ConfigLocator.php
index 445a18d6a..bfd4c33a6 100644
--- a/src/Config/ConfigLocator.php
+++ b/src/Config/ConfigLocator.php
@@ -106,7 +106,7 @@ class ConfigLocator
         }
         $this->config->addPlaceholder(self::USER_CONTEXT);
         $this->config->addPlaceholder(self::DRUPAL_CONTEXT);
-        $this->config->addPlaceholder(self::SITE_CONTEXT); // not implemented yet (multisite)
+        $this->config->addPlaceholder(self::SITE_CONTEXT);
         $this->config->addPlaceholder(self::ALIAS_CONTEXT);
         $this->config->addPlaceholder(self::PREFLIGHT_CONTEXT);
         $this->config->addPlaceholder(self::ENVIRONMENT_CONTEXT);
